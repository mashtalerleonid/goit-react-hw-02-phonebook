{"version":3,"sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Contacts/ContactListItem/ContactListItem.styled.jsx","components/Contacts/ContactListItem/ContactListItem.jsx","components/Contacts/ContactList/ContactList.styled.jsx","components/Contacts/ContactList/ContactList.jsx","App.styled.js","App.js","index.js"],"names":["Form","styled","form","Label","label","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","addContact","reset","onSubmit","this","onChange","autoComplete","type","pattern","title","required","Component","Input","input","Filter","filterChange","filter","Item","li","ContactListItem","id","onDeleteContact","onClick","List","ul","ContactList","list","map","item","Container","div","App","contacts","contact","uuidv4","isAdded","forEach","alert","prevState","deleteContact","contactId","getFilteredContacts","normalizedFilter","toLowerCase","includes","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94080047.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Form = styled.form`\r\n  width: 350px;\r\n  padding: 5px;\r\n  border: 2px solid black;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 60%;\r\n  margin-bottom: 10px;\r\n  font-size: 20px;\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Label } from \"./ContactForm.styled\";\r\n\r\nclass ContactForm extends Component {\r\n  state = { name: \"\", number: \"\" };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.addContact(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Label>\r\n          Name\r\n          <input\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            autoComplete=\"off\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </Label>\r\n\r\n        <Label>\r\n          Number\r\n          <input\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            autoComplete=\"off\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </Label>\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  addContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Label = styled.label`\r\n  margin-bottom: 10px;\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  margin-left: 5px;\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { Label, Input } from \"./Filter.styled\";\r\n\r\nfunction Filter({ filterChange, filter }) {\r\n  return (\r\n    <Label>\r\n      Find contacts by name:\r\n      <Input value={filter} onChange={filterChange} />\r\n    </Label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filterChange: PropTypes.func,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Item = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n  padding: 5px;\r\n  width: 450px;\r\n  font-size: 20px;\r\n  border: 2px solid tomato;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 2px 3px 3px rgba(34, 60, 80, 0.4);\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { Item } from \"./ContactListItem.styled\";\r\n\r\nfunction ContactListItem({ id, name, number, onDeleteContact }) {\r\n  return (\r\n    <Item>\r\n      {name}: {number}\r\n      <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n        Delete\r\n      </button>\r\n    </Item>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import styled from \"@emotion/styled\";\r\nexport const List = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport ContactListItem from \"components/Contacts/ContactListItem/\";\r\nimport { List } from \"./ContactList.styled\";\r\n\r\nfunction ContactList({ list, onDeleteContact }) {\r\n  return (\r\n    <List>\r\n      {list.map((item) => {\r\n        const { id, name, number } = item;\r\n\r\n        return (\r\n          <ContactListItem\r\n            key={id}\r\n            id={id}\r\n            name={name}\r\n            number={number}\r\n            onDeleteContact={onDeleteContact}\r\n          />\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  onDeleteContact: PropTypes.func,\r\n  list: PropTypes.arrayOf(PropTypes.shape).isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import styled from \"@emotion/styled\";\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n","import { v4 as uuidv4 } from \"uuid\";\nimport React, { Component } from \"react\";\nimport ContactForm from \"components/ContactForm\";\nimport Filter from \"components/Filter\";\nimport ContactList from \"components/Contacts/ContactList\";\nimport { Container } from \"./App.styled\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  addContact = ({ name, number }) => {\n    const contact = { id: uuidv4(), name, number };\n\n    let isAdded = false;\n\n    this.state.contacts.forEach((contact) => {\n      if (contact.name === name) {\n        isAdded = true;\n        return;\n      }\n    });\n\n    if (isAdded) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, contact],\n    }));\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  filterChange = (e) => {\n    const { value } = e.target;\n    this.setState({ filter: value });\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const filteredContacts = this.getFilteredContacts();\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm addContact={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter filterChange={this.filterChange} filter={filter} />\n        <ContactList\n          list={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}